services:
  miniflux:
    container_name: miniflux
    image: miniflux/miniflux:latest
    ports:
      - "${APP_PORT}:8080"
    depends_on:
      miniflux-db:
        condition: service_healthy
    networks:
      - tipi_main_network
      - backend_network
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@miniflux-db/${POSTGRES_DB}?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - PUID=1000
      - PGID=1000
    labels:
      # Main
      traefik.enable: ${APP_EXPOSED}
      traefik.http.middlewares.miniflux-web-redirect.redirectscheme.scheme: https
      traefik.http.services.miniflux.loadbalancer.server.port: 8080
      # Web
      traefik.http.routers.miniflux-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.miniflux-insecure.entrypoints: web
      traefik.http.routers.miniflux-insecure.service: miniflux
      traefik.http.routers.miniflux-insecure.middlewares: miniflux-web-redirect
      # Websecure
      traefik.http.routers.miniflux.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.miniflux.entrypoints: websecure
      traefik.http.routers.miniflux.service: miniflux-app
      traefik.http.routers.miniflux.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.miniflux-local-insecure.rule: Host(`miniflux.${LOCAL_DOMAIN}`)
      traefik.http.routers.miniflux-local-insecure.entrypoints: web
      traefik.http.routers.miniflux-local-insecure.service: miniflux
      traefik.http.routers.miniflux-local-insecure.middlewares: miniflux-web-redirect
      # Local domain secure
      traefik.http.routers.miniflux-local.rule: Host(`miniflux.${LOCAL_DOMAIN}`)
      traefik.http.routers.miniflux-local.entrypoints: websecure
      traefik.http.routers.miniflux-local.service: miniflux
      traefik.http.routers.miniflux-local.tls: true

  miniflux-db:
    container_name: miniflux-db
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend_network
    volumes:
      - ${APP_DATA_DIR}/miniflux:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s

networks:
  backend_network:
